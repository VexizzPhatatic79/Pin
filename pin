-- LocalScript

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local isThrowEnabled = false
local hasBomb = false -- Flag to check if player has the bomb
local originalPosition = nil -- Store original position when throw starts

-- UI setup
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
local enableButton = Instance.new("TextButton", screenGui)
local disableButton = Instance.new("TextButton", screenGui)
local throwButton = Instance.new("TextButton", screenGui)

-- Enable Button setup
enableButton.Position = UDim2.new(0.5, -25, 0, 50)
enableButton.Size = UDim2.new(0, 50, 0, 25)
enableButton.Text = "ဖွင့်မည်"
enableButton.BackgroundColor3 = Color3.new(0, 1, 0) -- Green
enableButton.Draggable = true

-- Disable Button setup
disableButton.Position = UDim2.new(0.5, -25, 0, 90)
disableButton.Size = UDim2.new(0, 50, 0, 25)
disableButton.Text = "ပိတ်မည်"
disableButton.BackgroundColor3 = Color3.new(1, 0, 0) -- Red
disableButton.Draggable = true
disableButton.Visible = false

-- Throw Button setup
throwButton.Position = UDim2.new(0.5, -25, 0, 130)
throwButton.Size = UDim2.new(0, 50, 0, 25)
throwButton.Text = "ပစ်မည်"
throwButton.BackgroundColor3 = Color3.new(1, 1, 0) -- Yellow
throwButton.Draggable = true
throwButton.Visible = false

-- Function to find the closest player
local function getClosestPlayer()
    local closestPlayer = nil
    local minDistance = math.huge

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (humanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < minDistance then
                minDistance = distance
                closestPlayer = otherPlayer
            end
        end
    end
    return closestPlayer
end

-- Function to throw the Bomb to the closest player
local function throwBomb()
    if hasBomb then
        local closestPlayer = getClosestPlayer()
        if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("HumanoidRootPart") then
            -- Save current player position
            originalPosition = humanoidRootPart.CFrame

            -- Move the Bomb to the closest player
            humanoidRootPart.CFrame = CFrame.new(closestPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 3, 0))

            -- Trigger Bomb throwing event (Server-side event should handle the transfer)
            local throwEvent = game.ReplicatedStorage:FindFirstChild("ThrowEvent")
            if throwEvent then
                throwEvent:FireServer(closestPlayer.Character)
            end

            -- After throwing, reset the bomb status
            hasBomb = false
            throwButton.Visible = false -- Hide the throw button after bomb is thrown
        end
    end
end

-- Enable Button functionality
enableButton.MouseButton1Click:Connect(function()
    isThrowEnabled = true
    enableButton.Visible = false
    disableButton.Visible = true
    throwButton.Visible = true
end)

-- Disable Button functionality
disableButton.MouseButton1Click:Connect(function()
    isThrowEnabled = false
    enableButton.Visible = true
    disableButton.Visible = false
    throwButton.Visible = false
end)

-- Throw Button functionality
throwButton.MouseButton1Click:Connect(function()
    if isThrowEnabled and hasBomb then
        throwBomb() -- Call the throw function
    end
end)

-- Detect Bomb in inventory
player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == "Bomb" then
        hasBomb = true
        throwButton.Visible = true -- Show throw button when bomb is received
    end
end)

-- Detect Bomb removed from inventory
player.Backpack.ChildRemoved:Connect(function(child)
    if child.Name == "Bomb" then
        hasBomb = false
        throwButton.Visible = false -- Hide throw button when bomb is lost
    end
end)
